var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Diolog_1 = require("./Scripts/Diolog");
var Button1_1 = require("./Scripts/Button1");
var Reader_1 = require("./Scripts/Reader");
var FaceReader_1 = require("./Scripts/FaceReader");
var commandReader_1 = require("./Scripts/commandReader");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Scripts/Diolog.ts", Diolog_1.default);
        reg("Scripts/Button1.ts", Button1_1.default);
        reg("Scripts/Reader.ts", Reader_1.default);
        reg("Scripts/FaceReader.ts", FaceReader_1.default);
        reg("Scripts/commandReader.ts", commandReader_1.default);
    };
    GameConfig.width = 1920;
    GameConfig.height = 1080;
    GameConfig.scaleMode = "exactfit";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Msg.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Scripts/Button1":3,"./Scripts/Diolog":4,"./Scripts/FaceReader":5,"./Scripts/Reader":6,"./Scripts/commandReader":7}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var Button1 = /** @class */ (function (_super) {
    __extends(Button1, _super);
    function Button1() {
        return _super.call(this) || this;
    }
    Button1.prototype.onEnable = function () {
        var button = this.owner;
        button.on(Laya.Event.CLICK, this, function () {
            Diolog_1.default.instance.button1Click();
        });
    };
    return Button1;
}(Laya.Script));
exports.default = Button1;
},{"./Diolog":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Reader_1 = require("./Reader");
var DiaLab = /** @class */ (function (_super) {
    __extends(DiaLab, _super);
    function DiaLab() {
        var _this = _super.call(this) || this;
        _this.story = [""]; //文本
        DiaLab.instance = _this;
        return _this;
    }
    DiaLab.prototype.createChildren = function () {
        _super.prototype.createChildren.call(this);
        this.loadScene("Msg");
    };
    DiaLab.prototype.onEnable = function () {
        this.Diolog.on(Laya.Event.CLICK, this, this.ClickFn);
    };
    DiaLab.prototype.onAwake = function () {
        this.reader = this.getComponent(Reader_1.default);
        this.onlyOnce = false;
        this.comNum = 10;
        this.chaNum = 12;
        this.line = 13;
        this.faceNum = 14;
        this.findNext = 5;
        this.word = 0;
        this.lineComplete = false;
        this.ShowWords();
    };
    DiaLab.prototype.button1Click = function () {
    };
    DiaLab.prototype.ShowWords = function () {
        var _this = this;
        this.reader.read(this.chaNum);
        this.showWord = setInterval(function () {
            _this.splitted = _this.story[_this.line][_this.word]; //把文本拆開 +1是為了避開 開頭的代號
            if (_this.splitted == undefined)
                return; //運行到最後一字時 避免出錯  
            _this.Diolog.text += _this.splitted;
            _this.word++; //跳下一個字            
            if (_this.story[_this.line][_this.word] == undefined) { //判斷此句是否結束
                clearInterval(_this.showWord); //關閉showWord
                _this.lineComplete = true;
            }
        }, 150);
    };
    DiaLab.prototype.isEnd = function () {
        if (this.story[this.line + this.findNext] == undefined) { //文本是否結束
            this.Diolog.off(Laya.Event.CLICK, this, this.ClickFn); //關閉點擊事件
            console.log("結束");
            return;
        }
        else if (this.story[this.line][this.word] == undefined) { //此句是否結束
            this.onlyOnce = true;
            this.word = 0;
            this.Diolog.text = "";
            this.line += this.findNext; //下一句話
            this.chaNum += this.findNext; //下一個人
            this.faceNum += this.findNext; //下一個表情
            this.comNum += this.findNext; //下一個指令
            return;
        }
    };
    DiaLab.prototype.ClickFn = function (e) {
        this.lineComplete = !this.lineComplete;
        if (this.lineComplete) { //文字還沒跳完時 點擊使他一次跳完
            clearInterval(this.showWord);
            this.word = this.story[this.line].length; //this.word = 此句最後一個字 (作為條件判斷是否進入下一句)
            this.Diolog.text = this.story[this.line]; //.substring(0, this.story[this.line].length);//跳出完整句子 避開 開頭代號
        }
        else { //文字跳完時 點擊跳出下一句 並呼叫showWord
            this.isEnd();
            this.ShowWords();
        }
    };
    DiaLab.prototype.nameCase = function (name) {
        switch (name) {
            case "吳俞恆":
                this.Name.text = "吳俞恆";
                break;
            case "少女":
                this.Name.text = "少女";
                break;
            case "":
                this.Name.text = "";
                break;
            case "D":
                this.Name.text = "D";
                break;
            case "E":
                this.Name.text = "E";
                break;
            case "F":
                this.Name.text = "F";
                break;
            case "G":
                this.Name.text = "G";
                break;
            case "H":
                this.Name.text = "H";
                break;
            case "I":
                this.Name.text = "I";
                break;
        }
    };
    return DiaLab;
}(Laya.Scene));
exports.default = DiaLab;
},{"./Reader":6}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var faceReader = /** @class */ (function (_super) {
    __extends(faceReader, _super);
    function faceReader() {
        return _super.call(this) || this;
    }
    faceReader.prototype.readFace = function (text) {
        if (text[Diolog_1.default.instance.chaNum] == "吳俞恆") {
            switch (text[Diolog_1.default.instance.faceNum]) {
                case "大哭":
                    Diolog_1.default.instance.Face.skin = "face/Zh/Zh_a1003.png";
                    break;
                case "大笑":
                    Diolog_1.default.instance.Face.skin = "face/Zh/Zh_a1005.png";
                    break;
            }
        }
        else if (text[Diolog_1.default.instance.chaNum] == "少女") {
            switch (text[Diolog_1.default.instance.faceNum]) {
                case "大哭":
                    Diolog_1.default.instance.Face.skin = "face/Gu/Gu_a1003.png";
                    break;
                case "大笑":
                    Diolog_1.default.instance.Face.skin = "face/Gu/Gu_a1005.png";
                    break;
            }
        }
    };
    return faceReader;
}(Laya.Script));
exports.default = faceReader;
},{"./Diolog":4}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var commandReader_1 = require("./commandReader");
var FaceReader_1 = require("./FaceReader");
var Reader = /** @class */ (function (_super) {
    __extends(Reader, _super);
    function Reader() {
        var _this = _super.call(this) || this;
        _this.storyPath = "../laya/assets/res/test.csv";
        return _this;
    }
    Reader.prototype.onAwake = function () {
        this.comReader = this.owner.getComponent(commandReader_1.default);
        this.faReader = this.owner.getComponent(FaceReader_1.default);
    };
    Reader.prototype.read = function (Num) {
        var _this = this;
        Laya.loader.load(this.storyPath, new Laya.Handler(this, function (e) {
            _this.comReader.readCom(e.split(","));
            _this.faReader.readFace(e.split(","));
            Diolog_1.default.instance.nameCase(e.split(",")[Num]);
            if (Diolog_1.default.instance.onlyOnce)
                return;
            Diolog_1.default.instance.story.length = 0;
            Diolog_1.default.instance.story = Diolog_1.default.instance.story.concat(e.split(","));
        }));
    };
    return Reader;
}(Laya.Script));
exports.default = Reader;
},{"./Diolog":4,"./FaceReader":5,"./commandReader":7}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var commandReader = /** @class */ (function (_super) {
    __extends(commandReader, _super);
    function commandReader() {
        return _super.call(this) || this;
    }
    commandReader.prototype.readCom = function (text) {
        // console.log(text[DiaLab.instance.comNum]);
        switch (text[Diolog_1.default.instance.comNum]) {
            case "characterOn":
                console.log("show");
                break;
            case "characterOff":
                console.log("off");
                break;
            default:
                console.log(text[Diolog_1.default.instance.comNum]);
                console.log("什麼都沒有");
                break;
        }
    };
    return commandReader;
}(Laya.Script));
exports.default = commandReader;
},{"./Diolog":4}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3dvcmtzcGFjZS9MYXlhMi9MYXlhQWlySURFL3Jlc291cmNlcy9hcHAvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInNyYy9HYW1lQ29uZmlnLnRzIiwic3JjL01haW4udHMiLCJzcmMvU2NyaXB0cy9CdXR0b24xLnRzIiwic3JjL1NjcmlwdHMvRGlvbG9nLnRzIiwic3JjL1NjcmlwdHMvRmFjZVJlYWRlci50cyIsInNyYy9TY3JpcHRzL1JlYWRlci50cyIsInNyYy9TY3JpcHRzL2NvbW1hbmRSZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVkEsZ0dBQWdHO0FBQ2hHLDJDQUFxQztBQUNyQyw2Q0FBdUM7QUFDdkMsMkNBQXFDO0FBQ3JDLG1EQUE2QztBQUM3Qyx5REFBbUQ7QUFDbkQ7O0VBRUU7QUFDRjtJQWFJO0lBQWMsQ0FBQztJQUNSLGVBQUksR0FBWDtRQUNJLElBQUksR0FBRyxHQUFhLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO1FBQzdDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBQyxnQkFBTSxDQUFDLENBQUM7UUFDaEMsR0FBRyxDQUFDLG9CQUFvQixFQUFDLGlCQUFPLENBQUMsQ0FBQztRQUNsQyxHQUFHLENBQUMsbUJBQW1CLEVBQUMsZ0JBQU0sQ0FBQyxDQUFDO1FBQ2hDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBQyxvQkFBVSxDQUFDLENBQUM7UUFDeEMsR0FBRyxDQUFDLDBCQUEwQixFQUFDLHVCQUFhLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBcEJNLGdCQUFLLEdBQVEsSUFBSSxDQUFDO0lBQ2xCLGlCQUFNLEdBQVEsSUFBSSxDQUFDO0lBQ25CLG9CQUFTLEdBQVEsVUFBVSxDQUFDO0lBQzVCLHFCQUFVLEdBQVEsTUFBTSxDQUFDO0lBQ3pCLGlCQUFNLEdBQVEsUUFBUSxDQUFD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QUNsRDtlQUNJLGlCQUFPO0lBQ1gsQ0FBQztJQUVELCtCQUFPLEdBQVAsVUFBUSxJQUFZO1FBQ2hCLDZDQUE2QztRQUM3QyxRQUFPLElBQUksQ0FBQyxnQkFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBQztZQUNoQyxLQUFLLGFBQWE7Z0JBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDcEIsTUFBTTtZQUNWLEtBQUssY0FBYztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNuQixNQUFNO1lBQ1Y7Z0JBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDMUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDckIsTUFBTTtTQUNiO0lBQ0wsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0FwQkEsQUFvQkMsQ0FwQjBDLElBQUksQ0FBQyxNQUFNLEdBb0JyRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuICAgIH07XHJcbn0pKCk7XHJcbihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cclxuaW1wb3J0IERpb2xvZyBmcm9tIFwiLi9TY3JpcHRzL0Rpb2xvZ1wiXG5pbXBvcnQgQnV0dG9uMSBmcm9tIFwiLi9TY3JpcHRzL0J1dHRvbjFcIlxuaW1wb3J0IFJlYWRlciBmcm9tIFwiLi9TY3JpcHRzL1JlYWRlclwiXG5pbXBvcnQgRmFjZVJlYWRlciBmcm9tIFwiLi9TY3JpcHRzL0ZhY2VSZWFkZXJcIlxuaW1wb3J0IGNvbW1hbmRSZWFkZXIgZnJvbSBcIi4vU2NyaXB0cy9jb21tYW5kUmVhZGVyXCJcclxuLypcclxuKiDmuLjmiI/liJ3lp4vljJbphY3nva47XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb25maWd7XHJcbiAgICBzdGF0aWMgd2lkdGg6bnVtYmVyPTE5MjA7XHJcbiAgICBzdGF0aWMgaGVpZ2h0Om51bWJlcj0xMDgwO1xyXG4gICAgc3RhdGljIHNjYWxlTW9kZTpzdHJpbmc9XCJleGFjdGZpdFwiO1xyXG4gICAgc3RhdGljIHNjcmVlbk1vZGU6c3RyaW5nPVwibm9uZVwiO1xyXG4gICAgc3RhdGljIGFsaWduVjpzdHJpbmc9XCJtaWRkbGVcIjtcclxuICAgIHN0YXRpYyBhbGlnbkg6c3RyaW5nPVwiY2VudGVyXCI7XHJcbiAgICBzdGF0aWMgc3RhcnRTY2VuZTphbnk9XCJNc2cuc2NlbmVcIjtcclxuICAgIHN0YXRpYyBzY2VuZVJvb3Q6c3RyaW5nPVwiXCI7XHJcbiAgICBzdGF0aWMgZGVidWc6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBzdGF0OmJvb2xlYW49ZmFsc2U7XHJcbiAgICBzdGF0aWMgcGh5c2ljc0RlYnVnOmJvb2xlYW49ZmFsc2U7XHJcbiAgICBzdGF0aWMgZXhwb3J0U2NlbmVUb0pzb246Ym9vbGVhbj10cnVlO1xyXG4gICAgY29uc3RydWN0b3IoKXt9XHJcbiAgICBzdGF0aWMgaW5pdCgpe1xyXG4gICAgICAgIHZhciByZWc6IEZ1bmN0aW9uID0gTGF5YS5DbGFzc1V0aWxzLnJlZ0NsYXNzO1xyXG4gICAgICAgIHJlZyhcIlNjcmlwdHMvRGlvbG9nLnRzXCIsRGlvbG9nKTtcbiAgICAgICAgcmVnKFwiU2NyaXB0cy9CdXR0b24xLnRzXCIsQnV0dG9uMSk7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvUmVhZGVyLnRzXCIsUmVhZGVyKTtcbiAgICAgICAgcmVnKFwiU2NyaXB0cy9GYWNlUmVhZGVyLnRzXCIsRmFjZVJlYWRlcik7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvY29tbWFuZFJlYWRlci50c1wiLGNvbW1hbmRSZWFkZXIpO1xyXG4gICAgfVxyXG59XHJcbkdhbWVDb25maWcuaW5pdCgpOyIsImltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcbmNsYXNzIE1haW4ge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlx0XHRcblx0XHRpZiAod2luZG93W1wiTGF5YTNEXCJdKSBMYXlhM0QuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XG5cdFx0ZWxzZSBMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQsIExheWFbXCJXZWJHTFwiXSk7XG5cdFx0TGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YVtcIkRlYnVnUGFuZWxcIl0gJiYgTGF5YVtcIkRlYnVnUGFuZWxcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBHYW1lQ29uZmlnLnNjYWxlTW9kZTtcblx0XHRMYXlhLnN0YWdlLnNjcmVlbk1vZGUgPSBHYW1lQ29uZmlnLnNjcmVlbk1vZGU7XG5cdFx0Ly/lhbzlrrnlvq7kv6HkuI3mlK/mjIHliqDovb1zY2VuZeWQjue8gOWcuuaZr1xuXHRcdExheWEuVVJMLmV4cG9ydFNjZW5lVG9Kc29uID0gR2FtZUNvbmZpZy5leHBvcnRTY2VuZVRvSnNvbjtcblxuXHRcdC8v5omT5byA6LCD6K+V6Z2i5p2/77yI6YCa6L+HSURF6K6+572u6LCD6K+V5qih5byP77yM5oiW6ICFdXJs5Zyw5Z2A5aKe5YqgZGVidWc9dHJ1ZeWPguaVsO+8jOWdh+WPr+aJk+W8gOiwg+ivlemdouadv++8iVxuXHRcdGlmIChHYW1lQ29uZmlnLmRlYnVnIHx8IExheWEuVXRpbHMuZ2V0UXVlcnlTdHJpbmcoXCJkZWJ1Z1wiKSA9PSBcInRydWVcIikgTGF5YS5lbmFibGVEZWJ1Z1BhbmVsKCk7XG5cdFx0aWYgKEdhbWVDb25maWcucGh5c2ljc0RlYnVnICYmIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdKSBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXS5lbmFibGUoKTtcblx0XHRpZiAoR2FtZUNvbmZpZy5zdGF0KSBMYXlhLlN0YXQuc2hvdygpO1xuXHRcdExheWEuYWxlcnRHbG9iYWxFcnJvciA9IHRydWU7XG5cblx0XHQvL+a/gOa0u+i1hOa6kOeJiOacrOaOp+WItu+8jHZlcnNpb24uanNvbueUsUlEReWPkeW4g+WKn+iDveiHquWKqOeUn+aIkO+8jOWmguaenOayoeacieS5n+S4jeW9seWTjeWQjue7rea1geeoi1xuXHRcdExheWEuUmVzb3VyY2VWZXJzaW9uLmVuYWJsZShcInZlcnNpb24uanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25WZXJzaW9uTG9hZGVkKSwgTGF5YS5SZXNvdXJjZVZlcnNpb24uRklMRU5BTUVfVkVSU0lPTik7XG5cdH1cblxuXHRvblZlcnNpb25Mb2FkZWQoKTogdm9pZCB7XG5cdFx0Ly/mv4DmtLvlpKflsI/lm77mmKDlsITvvIzliqDovb3lsI/lm77nmoTml7blgJnvvIzlpoLmnpzlj5HnjrDlsI/lm77lnKjlpKflm77lkIjpm4bph4zpnaLvvIzliJnkvJjlhYjliqDovb3lpKflm77lkIjpm4bvvIzogIzkuI3mmK/lsI/lm75cblx0XHRMYXlhLkF0bGFzSW5mb01hbmFnZXIuZW5hYmxlKFwiZmlsZWNvbmZpZy5qc29uXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkNvbmZpZ0xvYWRlZCkpO1xuXHR9XG5cblx0b25Db25maWdMb2FkZWQoKTogdm9pZCB7XG5cdFx0Ly/liqDovb1JREXmjIflrprnmoTlnLrmma9cblx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XG5cdH1cbn1cbi8v5r+A5rS75ZCv5Yqo57G7XG5uZXcgTWFpbigpO1xuIiwiaW1wb3J0IERpYUxhYiBmcm9tIFwiLi9EaW9sb2dcIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uMSBleHRlbmRzIExheWEuU2NyaXB0e1xuICAgIHB1YmxpYyBCdG4xOiBMYXlhLkJ1dHRvbjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cblxuICAgIG9uRW5hYmxlKCk6IHZvaWR7XG4gICAgICAgIGxldCBidXR0b246IExheWEuQnV0dG9uID0gdGhpcy5vd25lciBhcyBMYXlhLkJ1dHRvbjtcbiAgICAgICAgYnV0dG9uLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsKCk9PntcbiAgICAgICAgRGlhTGFiLmluc3RhbmNlLmJ1dHRvbjFDbGljaygpO1xuICAgICAgICB9KTtcbiAgICB9XG59IiwiaW1wb3J0IFJlYWRlciBmcm9tIFwiLi9SZWFkZXJcIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlhTGFiIGV4dGVuZHMgTGF5YS5TY2VuZXtcbiAgICBzdGF0aWMgaW5zdGFuY2U6IERpYUxhYjsvL+iLpeWFtuS7lueoi+W8j+imgeiqv+eUqCDliYflv4XpoIjlrqPlkYpcbiAgICBwcml2YXRlIHdvcmQ6IG51bWJlcjsvL+aWh+acrOS4rSDmr4/kuIDlj6XoqbHlgIvliKXnmoTlrZfmlbhcbiAgICBwcml2YXRlIGxpbmU6IG51bWJlcjsvL+aWh+acrOS4rSDlj6XmlbhcbiAgICBwcml2YXRlIGxpbmVDb21wbGV0ZTogYm9vbGVhbjsvL+WIpOaWtyDpgJnlj6XoqbHmmK/lkKborJvlroxcbiAgICBwcml2YXRlIHNwbGl0dGVkOiBzdHJpbmc7Ly/miormlofmnKzmi4bplotcbiAgICBwcml2YXRlIHNob3dXb3JkOiBudW1iZXI7Ly/orpPmlofmnKzkuIDlrZfkuIDlrZflh7rnj77nmoTlh73lvI9cbiAgICBwdWJsaWMgc3Rvcnk6IHN0cmluZ1tdID0gW1wiXCJdOy8v5paH5pysXG4gICAgcHVibGljIGNoYU51bTogbnVtYmVyOy8v5paH5pys5LitIOWQjeWtl+eahOS9jee9rlxuICAgIHB1YmxpYyBmaW5kTmV4dDogbnVtYmVyOy8vZXhjZWzmiaPmjolDb21tYW5k5pyJ5bm+5YiX5bCx6KaB5aSa5bCRIOeUqOS+huaJvuWIsOS4i+S4gOWAi+ebuOWQjOashOS9jVxuICAgIHB1YmxpYyBvbmx5T25jZTogYm9vbGVhbjsvL+iuk1JlYWRlcuWPluWHuuaWh+acrOeahOWLleS9nOS4jeimgemHjeikh+Wft+ihjFxuICAgIHB1YmxpYyBmYWNlTnVtOiBudW1iZXI7Ly/mlofmnKzkuK0g6KGo5oOF55qE5L2N572uXG4gICAgcHVibGljIGNvbU51bTogbnVtYmVyOy8v5paH5pys5LitY29tbWFuZOeahOS9jee9rlxuICAgIHB1YmxpYyBEaW9sb2c6IExheWEuTGFiZWw7Ly/lsI3oqbHlhaflrrnpoa/npLrljYDln59cbiAgICBwdWJsaWMgTmFtZTogTGF5YS5MYWJlbDsgLy/lkI3lrZfpoa/npLrljYDln59cbiAgICBwcml2YXRlIHJlYWRlcjogUmVhZGVyOy8v6K6A5paH5pysXG4gICAgcHVibGljIEZhY2U6IExheWEuSW1hZ2U7Ly/ooajmg4Xpoa/npLrljYDln59cbiAgICBcbiAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xuICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xuICAgICAgICB0aGlzLmxvYWRTY2VuZShcIk1zZ1wiKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIERpYUxhYi5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuRGlvbG9nLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuQ2xpY2tGbik7XG4gICAgfVxuXG4gICAgb25Bd2FrZSgpOiB2b2lkIHsgICAgICAgIFxuICAgICAgICB0aGlzLnJlYWRlciA9IHRoaXMuZ2V0Q29tcG9uZW50KFJlYWRlcik7XG4gICAgICAgIHRoaXMub25seU9uY2UgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb21OdW0gPSAxMDtcbiAgICAgICAgdGhpcy5jaGFOdW0gPSAxMjtcbiAgICAgICAgdGhpcy5saW5lID0gMTM7XG4gICAgICAgIHRoaXMuZmFjZU51bSA9IDE0O1xuICAgICAgICB0aGlzLmZpbmROZXh0ID0gNTtcbiAgICAgICAgdGhpcy53b3JkID0gMDtcbiAgICAgICAgdGhpcy5saW5lQ29tcGxldGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5TaG93V29yZHMoKTtcbiAgICB9ICAgXG5cbiAgICBidXR0b24xQ2xpY2soKTp2b2lkIHtcblxuICAgIH1cblxuICAgIFNob3dXb3JkcygpOiB2b2lkIHsvL+iuk+aWh+acrOS4gOWtl+S4gOWtl+WHuuePvlxuICAgICAgICB0aGlzLnJlYWRlci5yZWFkKHRoaXMuY2hhTnVtKTtcbiAgICAgICAgdGhpcy5zaG93V29yZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc3BsaXR0ZWQgPSB0aGlzLnN0b3J5W3RoaXMubGluZV1bdGhpcy53b3JkXTsvL+aKiuaWh+acrOaLhumWiyArMeaYr+eCuuS6humBv+mWiyDplovpoK3nmoTku6PomZ9cbiAgICAgICAgICAgIGlmICh0aGlzLnNwbGl0dGVkID09IHVuZGVmaW5lZCkgcmV0dXJuOyAvL+mBi+ihjOWIsOacgOW+jOS4gOWtl+aZgiDpgb/lhY3lh7rpjK8gIFxuICAgICAgICAgICAgdGhpcy5EaW9sb2cudGV4dCArPSB0aGlzLnNwbGl0dGVkO1xuICAgICAgICAgICAgdGhpcy53b3JkKys7Ly/ot7PkuIvkuIDlgIvlrZcgICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICh0aGlzLnN0b3J5W3RoaXMubGluZV1bdGhpcy53b3JkXSA9PSB1bmRlZmluZWQpIHsvL+WIpOaWt+atpOWPpeaYr+WQpue1kOadn1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zaG93V29yZCk7Ly/pl5zplolzaG93V29yZFxuICAgICAgICAgICAgICAgIHRoaXMubGluZUNvbXBsZXRlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgMTUwKTtcbiAgICB9XG5cbiAgICBpc0VuZCgpOiB2b2lkIHsvL+WIpOaWt+mAmeWPpeipseaYr+WQpuism+WujCAmIOaWh+acrOaYr+WQpuWFqOmDqOism+WujFxuICAgICAgICBpZiAodGhpcy5zdG9yeVt0aGlzLmxpbmUgKyB0aGlzLmZpbmROZXh0XSA9PSB1bmRlZmluZWQpIHsgLy/mlofmnKzmmK/lkKbntZDmnZ9cbiAgICAgICAgICAgIHRoaXMuRGlvbG9nLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLkNsaWNrRm4pOy8v6Zec6ZaJ6bue5pOK5LqL5Lu2XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIue1kOadn1wiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnN0b3J5W3RoaXMubGluZV1bdGhpcy53b3JkXSA9PSB1bmRlZmluZWQpIHsvL+atpOWPpeaYr+WQpue1kOadn1xuICAgICAgICAgICAgdGhpcy5vbmx5T25jZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLndvcmQgPSAwO1xuICAgICAgICAgICAgdGhpcy5EaW9sb2cudGV4dCA9IFwiXCI7XG4gICAgICAgICAgICB0aGlzLmxpbmUrPXRoaXMuZmluZE5leHQ7Ly/kuIvkuIDlj6XoqbFcbiAgICAgICAgICAgIHRoaXMuY2hhTnVtKz10aGlzLmZpbmROZXh0Oy8v5LiL5LiA5YCL5Lq6XG4gICAgICAgICAgICB0aGlzLmZhY2VOdW0rPXRoaXMuZmluZE5leHQ7Ly/kuIvkuIDlgIvooajmg4VcbiAgICAgICAgICAgIHRoaXMuY29tTnVtKz10aGlzLmZpbmROZXh0Oy8v5LiL5LiA5YCL5oyH5LukXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBDbGlja0ZuKGU6IExheWEuRXZlbnQpOiB2b2lkIHsvL+m7nuaTiuS6i+S7tlxuICAgICAgICB0aGlzLmxpbmVDb21wbGV0ZSA9ICF0aGlzLmxpbmVDb21wbGV0ZTtcbiAgICAgICAgaWYgKHRoaXMubGluZUNvbXBsZXRlKSB7Ly/mloflrZfpgoTmspLot7PlrozmmYIg6bue5pOK5L2/5LuW5LiA5qyh6Lez5a6MXG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuc2hvd1dvcmQpO1xuICAgICAgICAgICAgdGhpcy53b3JkID0gdGhpcy5zdG9yeVt0aGlzLmxpbmVdLmxlbmd0aDsvL3RoaXMud29yZCA9IOatpOWPpeacgOW+jOS4gOWAi+WtlyAo5L2c54K65qKd5Lu25Yik5pa35piv5ZCm6YCy5YWl5LiL5LiA5Y+lKVxuICAgICAgICAgICAgdGhpcy5EaW9sb2cudGV4dCA9IHRoaXMuc3RvcnlbdGhpcy5saW5lXTsvLy5zdWJzdHJpbmcoMCwgdGhpcy5zdG9yeVt0aGlzLmxpbmVdLmxlbmd0aCk7Ly/ot7Plh7rlrozmlbTlj6XlrZAg6YG/6ZaLIOmWi+mgreS7o+iZn1xuICAgICAgICB9IGVsc2Ugey8v5paH5a2X6Lez5a6M5pmCIOm7nuaTiui3s+WHuuS4i+S4gOWPpSDkuKblkbzlj6tzaG93V29yZFxuICAgICAgICAgICAgdGhpcy5pc0VuZCgpOyAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5TaG93V29yZHMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAgICAgICAgIFxuICAgIG5hbWVDYXNlKG5hbWU/OiBzdHJpbmcpOiB2b2lkIHsvL+aKk+WPlumWi+mgreS7o+iZnyDmlLnororlkI3lrZdcbiAgICAgICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgICAgICBjYXNlIFwi5ZCz5L+e5oGGXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5OYW1lLnRleHQgPSBcIuWQs+S/nuaBhlwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwi5bCR5aWzXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5OYW1lLnRleHQgPSBcIuWwkeWls1wiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5OYW1lLnRleHQgPSBcIlwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRFwiOlxuICAgICAgICAgICAgICAgIHRoaXMuTmFtZS50ZXh0ID0gXCJEXCJcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJFXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5OYW1lLnRleHQgPSBcIkVcIlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIkZcIjpcbiAgICAgICAgICAgICAgICB0aGlzLk5hbWUudGV4dCA9IFwiRlwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiR1wiOlxuICAgICAgICAgICAgICAgIHRoaXMuTmFtZS50ZXh0ID0gXCJHXCJcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJIXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5OYW1lLnRleHQgPSBcIkhcIlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIklcIjpcbiAgICAgICAgICAgICAgICB0aGlzLk5hbWUudGV4dCA9IFwiSVwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IERpYUxhYiBmcm9tIFwiLi9EaW9sb2dcIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBmYWNlUmVhZGVyIGV4dGVuZHMgTGF5YS5TY3JpcHR7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpOyAgIFxyXG4gICAgfVxyXG5cclxuICAgIHJlYWRGYWNlKHRleHQ6IHN0cmluZyk6dm9pZCB7ICAgICAgIFxyXG4gICAgICAgICBpZih0ZXh0W0RpYUxhYi5pbnN0YW5jZS5jaGFOdW1dID09IFwi5ZCz5L+e5oGGXCIpe1xyXG4gICAgICAgICAgICBzd2l0Y2godGV4dFtEaWFMYWIuaW5zdGFuY2UuZmFjZU51bV0pe1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIuWkp+WTrVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIERpYUxhYi5pbnN0YW5jZS5GYWNlLnNraW4gPSBcImZhY2UvWmgvWmhfYTEwMDMucG5nXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi5aSn56yRXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgRGlhTGFiLmluc3RhbmNlLkZhY2Uuc2tpbiA9IFwiZmFjZS9aaC9aaF9hMTAwNS5wbmdcIjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZih0ZXh0W0RpYUxhYi5pbnN0YW5jZS5jaGFOdW1dID09IFwi5bCR5aWzXCIpe1xyXG4gICAgICAgICAgICBzd2l0Y2godGV4dFtEaWFMYWIuaW5zdGFuY2UuZmFjZU51bV0pe1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIuWkp+WTrVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIERpYUxhYi5pbnN0YW5jZS5GYWNlLnNraW4gPSBcImZhY2UvR3UvR3VfYTEwMDMucG5nXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi5aSn56yRXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgRGlhTGFiLmluc3RhbmNlLkZhY2Uuc2tpbiA9IFwiZmFjZS9HdS9HdV9hMTAwNS5wbmdcIjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBEaWFMYWIgZnJvbSBcIi4vRGlvbG9nXCJcbmltcG9ydCBjb21tYW5kUmVhZGVyIGZyb20gXCIuL2NvbW1hbmRSZWFkZXJcIlxuaW1wb3J0IGZhY2VSZWFkZXIgZnJvbSBcIi4vRmFjZVJlYWRlclwiXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWFkZXIgZXh0ZW5kcyBMYXlhLlNjcmlwdHtcbiAgICBwdWJsaWMgbmFtZVN0YXJ0OiBudW1iZXI7XG4gICAgcHVibGljIGxpbmVTdGFydDogbnVtYmVyO1xuICAgIHByaXZhdGUgY29tUmVhZGVyOiBjb21tYW5kUmVhZGVyO1xuICAgIHByaXZhdGUgZmFSZWFkZXI6IGZhY2VSZWFkZXI7XG4gICAgcHJpdmF0ZSBzdG9yeVBhdGg6IHN0cmluZyA9IFwiLi4vbGF5YS9hc3NldHMvcmVzL3Rlc3QuY3N2XCI7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgb25Bd2FrZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jb21SZWFkZXIgPSB0aGlzLm93bmVyLmdldENvbXBvbmVudChjb21tYW5kUmVhZGVyKTtcbiAgICAgICAgdGhpcy5mYVJlYWRlciA9IHRoaXMub3duZXIuZ2V0Q29tcG9uZW50KGZhY2VSZWFkZXIpO1xuICAgIH1cblxuICAgIHJlYWQoTnVtPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIExheWEubG9hZGVyLmxvYWQodGhpcy5zdG9yeVBhdGgsIG5ldyBMYXlhLkhhbmRsZXIodGhpcywgKGUpID0+IHsgICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuY29tUmVhZGVyLnJlYWRDb20oZS5zcGxpdChcIixcIikpO1xuICAgICAgICAgICAgdGhpcy5mYVJlYWRlci5yZWFkRmFjZShlLnNwbGl0KFwiLFwiKSk7ICAgICBcbiAgICAgICAgICAgIERpYUxhYi5pbnN0YW5jZS5uYW1lQ2FzZShlLnNwbGl0KFwiLFwiKVtOdW1dKTtcbiAgICAgICAgICAgIGlmIChEaWFMYWIuaW5zdGFuY2Uub25seU9uY2UpIHJldHVybjtcbiAgICAgICAgICAgIERpYUxhYi5pbnN0YW5jZS5zdG9yeS5sZW5ndGggPSAwO1xuICAgICAgICAgICAgRGlhTGFiLmluc3RhbmNlLnN0b3J5ID0gRGlhTGFiLmluc3RhbmNlLnN0b3J5LmNvbmNhdChlLnNwbGl0KFwiLFwiKSk7XG4gICAgICAgIH0pKTtcbiAgICB9XG59IiwiaW1wb3J0IERpYUxhYiBmcm9tIFwiLi9EaW9sb2dcIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgY29tbWFuZFJlYWRlciBleHRlbmRzIExheWEuU2NyaXB0e1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpOyAgIFxuICAgIH1cblxuICAgIHJlYWRDb20odGV4dDogc3RyaW5nKTp2b2lkIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2codGV4dFtEaWFMYWIuaW5zdGFuY2UuY29tTnVtXSk7XG4gICAgICAgIHN3aXRjaCh0ZXh0W0RpYUxhYi5pbnN0YW5jZS5jb21OdW1dKXtcbiAgICAgICAgICAgIGNhc2UgXCJjaGFyYWN0ZXJPblwiOlxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2hvd1wiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJjaGFyYWN0ZXJPZmZcIjpcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9mZlwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGV4dFtEaWFMYWIuaW5zdGFuY2UuY29tTnVtXSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLku4Dpurzpg73mspLmnIlcIik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59Il19
