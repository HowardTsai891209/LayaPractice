var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Diolog_1 = require("./Scripts/Diolog");
var Reader_1 = require("./Scripts/Reader");
var FaceReader_1 = require("./Scripts/FaceReader");
var commandReader_1 = require("./Scripts/commandReader");
var ButtonObject_1 = require("./Scripts/ButtonObject");
var Button1_1 = require("./Scripts/Button1");
var Button2_1 = require("./Scripts/Button2");
var Button3_1 = require("./Scripts/Button3");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Scripts/Diolog.ts", Diolog_1.default);
        reg("Scripts/Reader.ts", Reader_1.default);
        reg("Scripts/FaceReader.ts", FaceReader_1.default);
        reg("Scripts/commandReader.ts", commandReader_1.default);
        reg("Scripts/ButtonObject.ts", ButtonObject_1.default);
        reg("Scripts/Button1.ts", Button1_1.default);
        reg("Scripts/Button2.ts", Button2_1.default);
        reg("Scripts/Button3.ts", Button3_1.default);
    };
    GameConfig.width = 1920;
    GameConfig.height = 1080;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Msg.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Scripts/Button1":3,"./Scripts/Button2":4,"./Scripts/Button3":5,"./Scripts/ButtonObject":6,"./Scripts/Diolog":7,"./Scripts/FaceReader":8,"./Scripts/Reader":9,"./Scripts/commandReader":10}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var ButtonObject_1 = require("./ButtonObject");
var Button1 = /** @class */ (function (_super) {
    __extends(Button1, _super);
    function Button1() {
        return _super.call(this) || this;
    }
    Button1.prototype.onAwake = function () {
        this.btnObj = this.owner.getComponent(ButtonObject_1.default);
    };
    Button1.prototype.onEnable = function () {
        var _this = this;
        var button = this.owner;
        button.on(Laya.Event.CLICK, this, function () {
            Diolog_1.default.instance.Btn1.skin = "Dialog/按鈕(選擇).png";
            _this.btnObj.btnClick();
            _this.btnObj.selectionJump();
            // DiaLab.instance.btnClick();
            // var selJump = DiaLab.instance.comNum;
            // while(DiaLab.instance.story[selJump] !== DiaLab.instance.story[DiaLab.instance.selNum]){          
            //     selJump += DiaLab.instance.findNext;
            // }
            // if(DiaLab.instance.story[selJump] == DiaLab.instance.story[DiaLab.instance.selNum]){
            //     DiaLab.instance.comNum = selJump;
            //     DiaLab.instance.chaNum = selJump+2;
            //     DiaLab.instance.line = selJump+3;
            //     DiaLab.instance.faceNum = selJump+4;
            //     DiaLab.instance.ClickFn();
            // }
        });
        button.on(Laya.Event.MOUSE_OVER, this, function () {
            Diolog_1.default.instance.Btn1.skin = "Dialog/按鈕(接觸).png";
        });
        button.on(Laya.Event.MOUSE_OUT, this, function () {
            Diolog_1.default.instance.Btn1.skin = "Dialog/按鈕(未選)_修正.png";
        });
    };
    return Button1;
}(Laya.Script));
exports.default = Button1;
},{"./ButtonObject":6,"./Diolog":7}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var ButtonObject_1 = require("./ButtonObject");
var Button2 = /** @class */ (function (_super) {
    __extends(Button2, _super);
    function Button2() {
        return _super.call(this) || this;
    }
    Button2.prototype.onAwake = function () {
        this.btnObj = this.owner.getComponent(ButtonObject_1.default);
    };
    Button2.prototype.onEnable = function () {
        var _this = this;
        var button = this.owner;
        button.on(Laya.Event.CLICK, this, function () {
            Diolog_1.default.instance.Btn2.skin = "Dialog/按鈕(選擇).png";
            Diolog_1.default.instance.selNum += Diolog_1.default.instance.findNext;
            _this.btnObj.btnClick();
            _this.btnObj.selectionJump();
            // DiaLab.instance.btnClick();
            // var selJump = DiaLab.instance.comNum;
            // while(DiaLab.instance.story[selJump] !== DiaLab.instance.story[DiaLab.instance.selNum]){          
            //     selJump += DiaLab.instance.findNext;
            // }
            // if(DiaLab.instance.story[selJump] == DiaLab.instance.story[DiaLab.instance.selNum]){
            //     DiaLab.instance.comNum = selJump;
            //     DiaLab.instance.chaNum = selJump+2;
            //     DiaLab.instance.line = selJump+3;
            //     DiaLab.instance.faceNum = selJump+4;
            //     DiaLab.instance.ClickFn();
            // }
        });
        button.on(Laya.Event.MOUSE_OVER, this, function () {
            Diolog_1.default.instance.Btn2.skin = "Dialog/按鈕(接觸).png";
        });
        button.on(Laya.Event.MOUSE_OUT, this, function () {
            Diolog_1.default.instance.Btn2.skin = "Dialog/按鈕(未選)_修正.png";
        });
    };
    return Button2;
}(Laya.Script));
exports.default = Button2;
},{"./ButtonObject":6,"./Diolog":7}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var ButtonObject_1 = require("./ButtonObject");
var Button3 = /** @class */ (function (_super) {
    __extends(Button3, _super);
    function Button3() {
        return _super.call(this) || this;
    }
    Button3.prototype.onAwake = function () {
        this.btnObj = this.owner.getComponent(ButtonObject_1.default);
    };
    Button3.prototype.onEnable = function () {
        var _this = this;
        var button = this.owner;
        button.on(Laya.Event.CLICK, this, function () {
            Diolog_1.default.instance.Btn3.skin = "Dialog/按鈕(選擇).png";
            Diolog_1.default.instance.selNum += Diolog_1.default.instance.findNext * 2;
            _this.btnObj.btnClick();
            _this.btnObj.selectionJump();
            // DiaLab.instance.btnClick();
            // var selJump = DiaLab.instance.comNum;
            // while(DiaLab.instance.story[selJump] !== DiaLab.instance.story[DiaLab.instance.selNum]){          
            //     selJump += DiaLab.instance.findNext;
            // }
            // if(DiaLab.instance.story[selJump] == DiaLab.instance.story[DiaLab.instance.selNum]){
            //     DiaLab.instance.comNum = selJump;
            //     DiaLab.instance.chaNum = selJump+2;
            //     DiaLab.instance.line = selJump+3;
            //     DiaLab.instance.faceNum = selJump+4;
            //     DiaLab.instance.ClickFn();
            // }
        });
        button.on(Laya.Event.MOUSE_OVER, this, function () {
            Diolog_1.default.instance.Btn3.skin = "Dialog/按鈕(接觸).png";
        });
        button.on(Laya.Event.MOUSE_OUT, this, function () {
            Diolog_1.default.instance.Btn3.skin = "Dialog/按鈕(未選)_修正.png";
        });
    };
    return Button3;
}(Laya.Script));
exports.default = Button3;
},{"./ButtonObject":6,"./Diolog":7}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var ButtonObj = /** @class */ (function (_super) {
    __extends(ButtonObj, _super);
    function ButtonObj() {
        return _super.call(this) || this;
    }
    ButtonObj.prototype.btnClick = function () {
        Diolog_1.default.instance.Diolog.on(Laya.Event.CLICK, Diolog_1.default.instance, Diolog_1.default.instance.ClickFn);
        Diolog_1.default.instance.Btn1.visible = false;
        Diolog_1.default.instance.Btn2.visible = false;
        Diolog_1.default.instance.Btn3.visible = false;
    };
    ButtonObj.prototype.selectionJump = function () {
        var selJump = Diolog_1.default.instance.comNum;
        while (Diolog_1.default.instance.story[selJump] !== Diolog_1.default.instance.story[Diolog_1.default.instance.selNum]) {
            selJump += Diolog_1.default.instance.findNext;
        }
        if (Diolog_1.default.instance.story[selJump] == Diolog_1.default.instance.story[Diolog_1.default.instance.selNum]) {
            Diolog_1.default.instance.comNum = selJump;
            Diolog_1.default.instance.chaNum = selJump + 2;
            Diolog_1.default.instance.line = selJump + 3;
            Diolog_1.default.instance.faceNum = selJump + 4;
            Diolog_1.default.instance.ClickFn();
        }
    };
    return ButtonObj;
}(Laya.Script));
exports.default = ButtonObj;
},{"./Diolog":7}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Reader_1 = require("./Reader");
var commandReader_1 = require("./commandReader");
var DiaLab = /** @class */ (function (_super) {
    __extends(DiaLab, _super);
    function DiaLab() {
        var _this = _super.call(this) || this;
        _this.story = [""]; //文本
        DiaLab.instance = _this;
        return _this;
    }
    DiaLab.prototype.createChildren = function () {
        _super.prototype.createChildren.call(this);
        this.loadScene("Msg");
    };
    DiaLab.prototype.onEnable = function () {
        this.Diolog.on(Laya.Event.CLICK, this, this.ClickFn);
    };
    DiaLab.prototype.onAwake = function () {
        this.reader = this.getComponent(Reader_1.default);
        this.comReader = this.getComponent(commandReader_1.default);
        this.onlyOnce = false;
        this.comNum = 8;
        this.chaNum = 10;
        this.line = 11;
        this.faceNum = 12;
        this.waitNum = 13;
        this.findNext = 7;
        this.word = 0;
        this.lineComplete = false;
        this.Btn1.visible = false;
        this.Btn2.visible = false;
        this.Btn3.visible = false;
        this.ShowWords();
    };
    DiaLab.prototype.ShowWords = function () {
        var _this = this;
        this.reader.read(this.chaNum);
        this.showWord = setInterval(function () {
            _this.splitted = _this.story[_this.line][_this.word]; //把文本拆開
            if (_this.splitted == undefined)
                return; //運行到最後一字時 避免出錯  
            _this.Diolog.text += _this.splitted;
            _this.word++; //跳下一個字            
            if (_this.story[_this.line][_this.word] == undefined) { //判斷此句是否結束
                clearInterval(_this.showWord); //關閉showWord
                _this.lineComplete = true;
                _this.comReader.showBtn();
            }
        }, 50);
    };
    DiaLab.prototype.isEnd = function () {
        if (this.story[this.line + this.findNext] == undefined) { //文本是否結束
            this.Diolog.off(Laya.Event.CLICK, this, this.ClickFn); //關閉點擊事件
            console.log("結束");
            return;
        }
        else if (this.story[this.line][this.word] == undefined) { //此句是否結束
            this.onlyOnce = true;
            this.word = 0;
            this.Diolog.text = "";
            this.line += this.findNext; //下一句話
            this.chaNum += this.findNext; //下一個人
            this.faceNum += this.findNext; //下一個表情
            this.comNum += this.findNext; //下一個指令
            this.waitNum += this.findNext;
            return;
        }
    };
    DiaLab.prototype.ClickFn = function () {
        this.lineComplete = !this.lineComplete;
        if (this.lineComplete) { //文字還沒跳完時 點擊使他一次跳完
            clearInterval(this.showWord);
            this.word = this.story[this.line].length; //this.word = 此句最後一個字 (作為條件判斷是否進入下一句)
            this.Diolog.text = this.story[this.line]; //.substring(0, this.story[this.line].length);//跳出完整句子
            this.lineComplete = true;
            this.comReader.showBtn();
        }
        else { //文字跳完時 點擊跳出下一句 並呼叫showWord
            this.isEnd();
            this.ShowWords();
        }
    };
    DiaLab.prototype.nameCase = function (name) {
        switch (name) {
            case "吳俞恆":
                this.Name.text = "吳俞恆";
                break;
            case "少女":
                this.Name.text = "少女";
                break;
            case "":
                this.Name.text = "";
                break;
            case "D":
                this.Name.text = "D";
                break;
            case "E":
                this.Name.text = "E";
                break;
            case "F":
                this.Name.text = "F";
                break;
            case "G":
                this.Name.text = "G";
                break;
            case "H":
                this.Name.text = "H";
                break;
            case "I":
                this.Name.text = "I";
                break;
        }
    };
    return DiaLab;
}(Laya.Scene));
exports.default = DiaLab;
},{"./Reader":9,"./commandReader":10}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var faceReader = /** @class */ (function (_super) {
    __extends(faceReader, _super);
    function faceReader() {
        return _super.call(this) || this;
    }
    faceReader.prototype.readFace = function (face) {
        if (face[Diolog_1.default.instance.chaNum] == "吳俞恆") {
            switch (face[Diolog_1.default.instance.faceNum]) {
                case "大哭":
                    Diolog_1.default.instance.Face.skin = "face/Zh/Zh_a1003.png";
                    break;
                case "大笑":
                    Diolog_1.default.instance.Face.skin = "face/Zh/Zh_a1005.png";
                    break;
            }
        }
        else if (face[Diolog_1.default.instance.chaNum] == "少女") {
            switch (face[Diolog_1.default.instance.faceNum]) {
                case "大哭":
                    Diolog_1.default.instance.Face.skin = "face/Gu/Gu_a1003.png";
                    break;
                case "大笑":
                    Diolog_1.default.instance.Face.skin = "face/Gu/Gu_a1005.png";
                    break;
            }
        }
    };
    return faceReader;
}(Laya.Script));
exports.default = faceReader;
},{"./Diolog":7}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var commandReader_1 = require("./commandReader");
var FaceReader_1 = require("./FaceReader");
var Reader = /** @class */ (function (_super) {
    __extends(Reader, _super);
    function Reader() {
        var _this = _super.call(this) || this;
        _this.storyPath = "../laya/assets/res/test.csv";
        return _this;
    }
    Reader.prototype.onAwake = function () {
        this.comReader = this.owner.getComponent(commandReader_1.default);
        this.faReader = this.owner.getComponent(FaceReader_1.default);
    };
    Reader.prototype.read = function (Num) {
        var _this = this;
        Laya.loader.load(this.storyPath, new Laya.Handler(this, function (e) {
            var text = e.split(",");
            _this.comReader.readCom(text);
            _this.faReader.readFace(text);
            Diolog_1.default.instance.nameCase(text[Num]);
            if (Diolog_1.default.instance.onlyOnce)
                return;
            console.log(text);
            Diolog_1.default.instance.story.length = 0;
            Diolog_1.default.instance.story = Diolog_1.default.instance.story.concat(e.split(","));
        }));
    };
    return Reader;
}(Laya.Script));
exports.default = Reader;
},{"./Diolog":7,"./FaceReader":8,"./commandReader":10}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Diolog_1 = require("./Diolog");
var ButtonObject_1 = require("./ButtonObject");
var commandReader = /** @class */ (function (_super) {
    __extends(commandReader, _super);
    function commandReader() {
        return _super.call(this) || this;
    }
    commandReader.prototype.onAwake = function () {
        this.btnObj = this.owner.getComponent(ButtonObject_1.default);
    };
    commandReader.prototype.readCom = function (command) {
        switch (command[Diolog_1.default.instance.comNum]) {
            case "characterON":
                Diolog_1.default.instance.Face.visible = true;
                break;
            case "characterOFF":
                Diolog_1.default.instance.Face.visible = false;
                break;
            case "Jump":
                Diolog_1.default.instance.selNum = Diolog_1.default.instance.comNum + 1;
                this.btnObj.selectionJump();
                Diolog_1.default.instance.ClickFn();
                break;
            case "Wait":
                var waitSecond = +Diolog_1.default.instance.story[Diolog_1.default.instance.waitNum] * 1000;
                Diolog_1.default.instance.Diolog.off(Laya.Event.CLICK, Diolog_1.default.instance, Diolog_1.default.instance.ClickFn);
                setTimeout(function () {
                    Diolog_1.default.instance.Diolog.on(Laya.Event.CLICK, Diolog_1.default.instance, Diolog_1.default.instance.ClickFn);
                    Diolog_1.default.instance.line += Diolog_1.default.instance.findNext;
                    Diolog_1.default.instance.chaNum += Diolog_1.default.instance.findNext;
                    Diolog_1.default.instance.faceNum += Diolog_1.default.instance.findNext;
                    Diolog_1.default.instance.comNum += Diolog_1.default.instance.findNext;
                    Diolog_1.default.instance.waitNum += Diolog_1.default.instance.findNext;
                }, waitSecond);
                break;
        }
    };
    commandReader.prototype.showBtn = function () {
        this.nextCom = Diolog_1.default.instance.comNum + Diolog_1.default.instance.findNext;
        if (Diolog_1.default.instance.story[this.nextCom] == "Selection2") {
            this.holdText();
            Diolog_1.default.instance.Btn1.visible = true;
            Diolog_1.default.instance.Btn1.label = this.btn1Text;
            Diolog_1.default.instance.Btn2.visible = true;
            Diolog_1.default.instance.Btn2.label = this.btn2Text;
        }
        else if (Diolog_1.default.instance.story[this.nextCom] == "Selection3") {
            this.holdText();
            Diolog_1.default.instance.Btn1.visible = true;
            Diolog_1.default.instance.Btn1.label = this.btn1Text;
            Diolog_1.default.instance.Btn2.visible = true;
            Diolog_1.default.instance.Btn2.label = this.btn2Text;
            Diolog_1.default.instance.Btn3.visible = true;
            Diolog_1.default.instance.Btn3.label = this.btn3Text;
        }
    };
    commandReader.prototype.holdText = function () {
        Diolog_1.default.instance.Diolog.off(Laya.Event.CLICK, Diolog_1.default.instance, Diolog_1.default.instance.ClickFn);
        Diolog_1.default.instance.selNum = this.nextCom + 1;
        this.btn1Text = Diolog_1.default.instance.story[Diolog_1.default.instance.line + Diolog_1.default.instance.findNext];
        this.btn2Text = Diolog_1.default.instance.story[Diolog_1.default.instance.line + Diolog_1.default.instance.findNext * 2];
        this.btn3Text = Diolog_1.default.instance.story[Diolog_1.default.instance.line + Diolog_1.default.instance.findNext * 3];
    };
    return commandReader;
}(Laya.Script));
exports.default = commandReader;
},{"./ButtonObject":6,"./Diolog":7}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
